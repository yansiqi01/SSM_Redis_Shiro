<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--引入外部文件-->
    <context:property-placeholder location="classpath:properties/db.properties"/>

    <!--1.配置数据源 c3p0-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.pwd}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>

        <!--#定义最大空闲-->
        <property name="initialPoolSize" value="${pool.initSize}"/>
        <!--#定义最大连接数-->
        <property name="maxPoolSize" value="${pool.maxSize}"/>
    </bean>
    
    <!--配置MybatisPagehelper插件-->
    <!--<bean id="pageInterceptor" class="com.github.pagehelper.PageInterceptor">
       <property name="properties">
           <props>
               &lt;!&ndash;默认false，设置为true时，使用RowBounds分页会进行count查询&ndash;&gt;
               <prop key="rowBoundsWithCount">true</prop>
           </props>
       </property>
    </bean>-->


    <!--2.配置sqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--2.1加载数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--2.2 加载mapper映射文件-->
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        <!--2.3 为实体类设置别名-->
        <!--<property name="typeAliasesPackage" value="com.zking.model"/>-->
        <!--引入pageHelper分页插件-->
        <!--<property name="plugins" ref="pageInterceptor"/>-->

        <!--加载mybatis-config.xml核心怕配置文件-->
        <property name="configLocation" value="classpath:Mybatis-config.xml"/>
    </bean>


    <!--3.扫描mapper文件向com.zking.dao 层映射sqlsessionFacotry-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--3.1扫描com.zking.dao需要使用sqlsessinoFacoty的实例-->
        <property name="basePackage" value="com.zking.dao"/>
        <!--3.2 向需要sqlsesison...的实例映射sqlsessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--
        注意,没有必要去指定SqlSessionFactory或 SqlSessionTemplate, 因为 MapperScannerConfigurer
        将会创建 MapperFactoryBean,之后自动装配。但是,如果你使用了一个 以上的 DataSource ,那 么自动
        装配可 能会失效 。这种 情况下 ,你可以使用 sqlSessionFactoryBeanName 或 sqlSessionTemplateBeanName
        属性来设置正确的 bean名称来使用。这就是它如何来配置的,注意 bean 的名称是必须的,而不是 bean 的引用,因 此,
        value 属性在这里替代通常的 ref:
        -->
    </bean>

    <!--4.开启spring事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--5.启用spring注解事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>